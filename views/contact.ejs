<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <style>
        /* Styling umum untuk body */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4; /* Warna latar belakang halaman */
        }


        /* Styling untuk tabel */
        .table-container {
            max-height: 400px; /* Tinggi maksimal untuk kontainer tabel */
            overflow-y: auto; /* Mengaktifkan scroll vertikal */
            margin: 20px auto; /* Memusatkan kontainer */
            border: 1px solid #ccc; /* Border untuk kontainer tabel */
            background-color: white; /* Warna latar belakang tabel */
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Efek bayangan */
        }
        table {
            border-collapse: collapse; /* Menghilangkan jarak antara border sel */
            width: 100%; /* Lebar tabel */
        }
        th, td {
            border: 1px solid #ccc; /* Border untuk sel */
            padding: 10px; /* Jarak di dalam sel */
            text-align: left; /* Mengatur teks di dalam sel */
        }
        th {
            background-color: #f8f8f8; /* Warna latar belakang header tabel */
        }

        /* Styling untuk tombol */
        button {
            padding: 10px 15px; /* Jarak di dalam tombol */
            border: none; /* Menghilangkan border */
            border-radius: 5px; /* Sudut tombol melengkung */
            cursor: pointer; /* Menunjukkan kursor tangan saat hover */
            margin: 5px; /* Jarak antar tombol */
        }
        button#addContactButton {
            background-color: #add8e6; /* Warna biru muda */
            color: black; /* Warna teks tombol */
        }
        button#editButton, button#deleteButton {
            background-color: rgba(241, 50, 50, 0.959); /* Warna merah */
            color: rgb(8, 8, 8); /* Warna teks tombol */
        }
        button#detailButton {
            background-color: white; /* Warna putih */
            color: black; /* Warna teks tombol */
            border: 1px solid #ccc; /* Border untuk tombol detail */
        }

        /* Overlay styling */
        #overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }
    </style>
</head>
<body>
    <header>
        <!%- include('layout/nav') %>
    </header>
    <main>
        <% if (message) { %>
            <h1><strong><%= message %></strong></h1>
        <% } %>
        <br>
        <h1>Daftar Kontak</h1>
        <button id="addContactButton" onclick="showAddContactForm()">Tambah Kontak</button>

        <!-- Form untuk menambahkan kontak baru -->
        <div id="addContactForm" style="display:none; position:fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: white; border: 1px solid #ccc; padding: 20px; z-index: 1000;">
            <h2>Tambah Kontak</h2>
            <label>Nama:</label>
            <input type="text" id="newName" required>
            <br>
            <label>Email:</label>
            <input type="email" id="newEmail" required>
            <br>
            <label>Nomor:</label>
            <input type="text" id="newMobile" required>
            <br>
            <br>
            <button onclick="addContact()">Simpan</button>
            <button onclick="hideAddContactForm()">Batal</button>
        </div>

        <!-- Overlay untuk gelap ketika form muncul -->
        <div id="overlay"></div>

        <!-- Form untuk melihat detail kontak -->
        <div id="detailContact" style="display:none; position:fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: white; border: 1px solid #ccc; padding: 20px; z-index: 1000;">
            <h2>Detail Kontak</h2>
            <p id="detailText"></p>
            <button id="editButton" onclick="editContact()">Edit</button>
            <button id="deleteButton" onclick="deleteContact()">Delete</button>
            <button onclick="hideDetailContact()">Tutup</button>
        </div>

        <% if (contacts.length > 0) { %>
            <br>
            <div class="table-container">
                <table>
                    <tr>
                        <th>Nama</th>
                        <th>Email</th>
                    </tr>
                    <% contacts.forEach((contact, index) => { %>
                        <tr>
                            <td><%= contact.name %></td>
                            <td><%= contact.email %></td>
                            <td>
                                <button id="detailButton" onclick='showDetails("<%= contact.name %>", "<%= contact.email %>", "<%= contact.mobile %>", <%= index %>)'>Detail</button>
                            </td>
                        </tr>
                    <% }) %>
                </table>
            </div>
        <% } else { %>
            <p>Tidak ada kontak yang tersedia.</p>
        <% } %>
    </main>
    
    <script>
        let currentContactIndex;

        // Fungsi untuk menampilkan form tambah kontak
        function showAddContactForm() {
            document.getElementById("addContactForm").style.display = "block"; // Tampilkan form
            document.getElementById("overlay").style.display = "block"; // Tampilkan overlay
        }

        // Fungsi untuk menyembunyikan form tambah kontak
        function hideAddContactForm() {
            document.getElementById("addContactForm").style.display = "none"; // Sembunyikan form
            document.getElementById("overlay").style.display = "none"; // Sembunyikan overlay
        }

        // Fungsi untuk menampilkan detail kontak
        function showDetails(name, email, mobile, index) {
            currentContactIndex = index; // Simpan index kontak saat ini
            const detailText = `Nama: ${name}<br>Email: ${email}<br>Nomor: ${mobile}`;
            document.getElementById("detailText").innerHTML = detailText; // Tampilkan detail di elemen
            document.getElementById("detailContact").style.display = "block"; // Tampilkan pop-up detail
            document.getElementById("overlay").style.display = "block"; // Tampilkan overlay
        }

        // Fungsi untuk menyembunyikan detail kontak
        function hideDetailContact() {
            document.getElementById("detailContact").style.display = "none"; // Sembunyikan detail
            document.getElementById("overlay").style.display = "none"; // Sembunyikan overlay
        }

        // Fungsi untuk menambahkan kontak baru
        function addContact() {
            const name = document.getElementById("newName").value; // Ambil nama dari input
            const email = document.getElementById("newEmail").value; // Ambil email dari input
            const mobile = document.getElementById("newMobile").value; // Ambil nomor telepon dari input

            // Kirim data kontak baru ke server
            fetch('/contacts/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ name, email, mobile }), // Mengubah data menjadi JSON
            })
            .then(response => response.json()) // Mengambil respon dari server
            .then(data => {
                alert(data.message); // Tampilkan pesan dari server
                location.reload(); // Muat ulang halaman untuk menampilkan kontak terbaru
            })
            .catch(error => console.error('Error:', error)); // Tangani error
        }

        // Fungsi untuk mengedit kontak
        function editContact() {
            const name = document.getElementById("detailText").innerText.split("Nama: ")[1].split("\n")[0];
            const email = document.getElementById("detailText").innerText.split("Email: ")[1].split("\n")[0];
            const mobile = document.getElementById("detailText").innerText.split("Nomor: ")[1].trim();

            const newName = prompt("Masukkan nama baru:", name); // Prompt untuk memasukkan nama baru
            const newEmail = prompt("Masukkan email baru:", email); // Prompt untuk memasukkan email baru
            const newMobile = prompt("Masukkan nomor baru:", mobile); // Prompt untuk memasukkan nomor baru

            if (newName && newEmail) { // Pastikan nama dan email baru ada
                // Kirim data yang diperbarui ke server
                fetch(`/contacts/update/${currentContactIndex}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ name: newName, email: newEmail, mobile: newMobile }), // Mengubah data menjadi JSON
                })
                .then(response => response.json()) // Mengambil respon dari server
                .then(data => {
                    alert(data.message); // Tampilkan pesan dari server
                    location.reload(); // Muat ulang halaman untuk menampilkan kontak terbaru
                })
                .catch(error => console.error('Error:', error)); // Tangani error
            }
        }

        // Fungsi untuk menghapus kontak
        function deleteContact() {
            if (confirm("Yakin ingin menghapus kontak ini?")) { // Konfirmasi sebelum menghapus
                // Kirim permintaan untuk menghapus kontak ke server
                fetch(`/contacts/delete/${currentContactIndex}`, {
                    method: 'DELETE',
                })
                .then(response => response.json()) // Mengambil respon dari server
                .then(data => {
                    alert(data.message); // Tampilkan pesan dari server
                    location.reload(); // refresh untuk menampilkan kontak terbaru
                })
                .catch(error => console.error('Error:', error)); // Tangani error
            }
        }
    </script>

    <!%- include('layout/footer') %>
</body>
</html>

<!-- Pop-up Detail: Ditambahkan tombol "Edit" dan "Delete" di dalam pop-up detail  -->
<!-- showDetails Function: Mengambil kontak yang ditampilkan untuk digunakan saat mengedit atau menghapus -->
<!-- editContact Function: Mengambil data yang ada dari pop-up untuk pengeditan -->
<!-- deleteContact Function: Menggunakan kontak saat ini untuk menghapus kontak yang sesuai -->







